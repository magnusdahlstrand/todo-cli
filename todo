#!/usr/bin/env bash

dir=$(pwd)
scriptname=$(basename "$0")

root=$(git rev-parse --show-toplevel 2> /dev/null)
if [[ $? != 0 ]]; then
  root="$dir"
fi
export GIT_DIR="$root/.todo"


# Helper functions
error() {
  case "$1" in
    need_copy )
      message='The command needs copy'
      code=3
      ;;
    not_setup )
      message='Todo not setup. Please run `todo init`'
      code=2
      ;;
    already_setup )
      message='Todo already initialized'
      code=2
      ;;
    need_todo_id )
      message='You need to provide a todo #'
      code=4
      ;;
  esac
  echo "$message" 1>&2
  exit $code
}

is_setup() {
  [[ -d $root/.todo ]]
}

show() {
  format=$1
  shift
  git log --abbrev=4 --pretty=format:"$format" $@
}
show_as_done() {
  show "%h %C(green)☑%C(reset)%C(auto) %s" $@
}
show_as_not_done() {
  show "%h %C(red)☐%C(reset)%C(auto) %s" $@
}

# Plumbing
_new_commit_object() {
  if [[ -z "$2" ]]; then
    parent="root"
    copy="$@"
  else
    parent="$1"
    shift
    copy="$@"
  fi
  echo $(echo "$copy" | git commit-tree $(git hash-object -t tree /dev/null) -p $parent)
}
_new_commit_object_at_head() {
  head="$1"
  shift
  copy="$@"
  new_co_sha=$(_new_commit_object $head $@)
  git update-ref refs/heads/$head $new_co_sha
  echo $new_co_sha
}


# UI
usage="usage: $scriptname [<command>|todo]"
show_help() {
  echo $usage
  cat << EOF

Commands:
   +      Create new todo
   =      Mark todo as done
   ?      List remaining todos
   ??     List all todos
EOF
}

setup() {
  if is_setup; then
    error already_setup
  fi
  git init --quiet --bare
  git update-ref refs/heads/root $(echo 'TODO' | git commit-tree $(git hash-object -t tree /dev/null))
  git update-ref refs/heads/todos root
  git update-ref refs/heads/ticked root
}

new_todo() {
  if [[ -z "$@" ]]; then
    error need_copy
  fi
  new_todo_sha=$(_new_commit_object_at_head todos $@)
  show_as_not_done $new_todo_sha^..$new_todo_sha
}

list_todos() {
  show_as_not_done root..todos
}
list_ticked() {
  show_as_done root..ticked
}

tick_todo() {
  if [[ -z "$1" ]]; then
    error need_todo_id
  else
    ticking_off_sha="$1"
  fi
  new_todo_sha=$(git show --format="%s" $ticking_off_sha | GIT_COMMITTER_NAME=☑ git commit-tree $(git hash-object -t tree /dev/null) -p ticked)
  previous_todo_sha=$(git log --max-count=1 --format="%h" $ticking_off_sha^)
  git update-ref refs/heads/ticked $new_todo_sha
  git update-ref refs/heads/todos $previous_todo_sha
  show_as_done $new_todo_sha^..$new_todo_sha
}

case "$1" in
  --help )
      show_help
    ;;
  help )
      show_help
    ;;
  init )
      shift
      setup $@
      echo "todo has been initialized in $GIT_DIR"
    ;;
  git )
      shift
      git "$@"
    ;;
  * )
    if ! is_setup; then
      error not_setup
    fi
    case "$1" in
      + )
          shift
          new_todo $@
        ;;
      \? )
          shift
          list_todos $@
        ;;
      \?\? )
          shift
          list_todos $@
          list_ticked $@
        ;;
      = )
          shift
          tick_todo $@
        ;;
      * )
          if [[ -z "$@" ]]; then
            list_todos $@
          else
            new_todo $@
          fi
    esac
esac
