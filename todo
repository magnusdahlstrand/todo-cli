#!/usr/bin/env bash

dir=$(pwd)
scriptname=$(basename "$0")

root=$(git rev-parse --show-toplevel 2> /dev/null)
if [[ $? != 0 ]]; then
  root="$dir"
fi
export GIT_DIR="$root/.todo"


# Helper functions
error() {
  case "$1" in
    need_copy )
      message='The command needs copy'
      code=3
      ;;
  esac
  echo "$message" 1>&2
  exit $code
}

is_setup() {
  [[ -d $root/.todo ]]
}


# UI
usage="usage: $scriptname [<command>|todo]"
show_help() {
  echo $usage
  cat << EOF

Commands:
   new    Create new todo
   rm     Remove todo
   done   Tick off todo
EOF
}

setup() {
  git init --quiet --bare
  git update-ref refs/heads/todos $(echo 'TODO' | git commit-tree $(git hash-object -t tree /dev/null))
}

new_todo() {
  if [[ -z "$@" ]]; then
    error need_copy
  fi
  echo "New TODO: $@"
  git update-ref refs/heads/todos $(echo "$@" | git commit-tree $(git hash-object -t tree /dev/null) -p todos)
}

list_todos() {
  echo 'list todos'
  git log --pretty=format:'%h %s' todos
}

archive_todo() {
  echo 'remove todo'
}

tick_todo() {
  echo 'tick off todo'
}

case "$1" in
  --help )
      show_help
    ;;
  + )
      shift
      new_todo $@
    ;;
  ? )
      shift
      list_todos $@
    ;;
  - )
      shift
      archive_todo $@
    ;;
  = )
      shift
      tick_todo $@
    ;;
  init )
      shift
      setup $@
      if is_setup; then
        echo "todo has been initialized in $GIT_DIR"
      fi
    ;;
  * )
      new_todo $@
esac
